{"version":3,"sources":["assets/images/CVV.png","components/Payment/Payment.jsx","components/Terms/Terms.jsx","components/SubmitBtn/SubmitBtn.jsx","App.js","index.js"],"names":["module","exports","Payment","cards","cardsValue","setCardsValue","useState","activeCard","setActiveCard","toolTipActive","setToolTipActive","onChangeValue","event","value","target","name","validateValues","replace","valid","length","showError","openToolTip","closeToolTip","className","map","link","key","id","onClick","number","textError","month","year","cvv","checked","card","htmlFor","type","classNames","onChange","cardNumber","match","join","validateCardNumbersValue","maxLength","onMouseOver","onMouseLeave","src","imgCVV","alt","Terms","activePopup","setActivePopup","popupWrap","useRef","popupBtn","ref","current","SubmitBtn","onSubmit","App","initialState","successSubmit","setSuccessSubmit","errorSubmit","setErrorSubmit","errorsList","setErrorsList","successArr","errorsArr","console","log","href","Object","values","item","push","setTimeout","err","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sHAAAA,EAAOC,QAAU,IAA0B,iC,kPC4N5BC,EAtNC,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAAoB,EAEjBC,mBAAS,GAFQ,mBAE9CC,EAF8C,KAElCC,EAFkC,OAGXF,oBAAS,GAHE,mBAG9CG,EAH8C,KAG/BC,EAH+B,KAiB/CC,EAAgB,SAACC,GACnB,IAAMC,EAAQD,EAAME,OAAOD,MACrBE,EAAOH,EAAME,OAAOC,KAC1BV,GAAc,kBAAMW,EAAeH,EAAOE,OAGxCC,EAAiB,SAACH,EAAOE,GAC3B,OAAOA,GACH,IAAK,QAUL,IAAK,OACD,OAAO,2BACAX,GADP,kBAEKW,EAFL,2BAGWX,EAAWW,IAHtB,IAIQF,MAAOA,EAAMI,QAAQ,SAAS,IAC9BC,MAAwB,IAAjBL,EAAMM,OACbC,UAA6B,KAAjBP,EAAMM,WAG9B,IAAK,OACD,OAAO,2BACAf,GADP,kBAEKW,EAFL,2BAGWX,EAAWW,IAHtB,IAIQF,MAAOA,EAAMI,QAAQ,aAAc,IACnCC,MAAOL,EAAMM,OAAS,GAAKN,EAAMM,QAAU,GAC3CC,WAAYP,EAAMM,OAAS,IAAMN,EAAMM,QAAU,OAG7D,IAAK,MACD,OAAO,2BACAf,GADP,kBAEKW,EAFL,2BAGWX,EAAWW,IAHtB,IAIQF,MAAOA,EAAMI,QAAQ,SAAS,IAC9BC,MAAwB,IAAjBL,EAAMM,OACbC,UAA6B,KAAjBP,EAAMM,WAG9B,QACI,OAAOf,IAoBbiB,EAAc,WAChBX,GAAiB,IAEfY,EAAe,WACjBZ,GAAiB,IAGrB,OACI,yBAAKa,UAAU,WACX,yBAAKA,UAAU,gBACVpB,EAAMqB,KAAI,SAAAC,GAAI,OACX,0BACIC,IAAKD,EAAKE,GACVC,QAAS,kBA9FFD,EA8F0BF,EAAKE,GA7FtDnB,EAAcmB,QACdtB,EAAc,CACVwB,OAAQ,CAAChB,MAAO,GAAIK,OAAO,EAAOY,UAAW,oBAC7CC,MAAO,CAAClB,MAAO,GAAIK,OAAO,EAAOY,UAAW,mBAC5CE,KAAM,CAACnB,MAAO,GAAIK,OAAO,EAAOY,UAAW,kBAC3Cf,KAAM,CAACF,MAAO,GAAIK,OAAO,EAAOY,UAAW,kBAC3CG,IAAK,CAACpB,MAAO,GAAIK,OAAO,EAAOY,UAAW,iBAC1CI,QAAS,CAACrB,OAAO,EAAOK,OAAO,EAAOY,UAAW,+FAR/B,IAACH,GA+FPJ,UAAWhB,IAAekB,EAAKE,GAAK,2BAA6B,qBAEhEF,EAAKV,UAKlB,yBAAKQ,UAAU,qBACVpB,EAAMqB,KAAI,SAAAW,GAAI,OACX,yBACIT,IAAKS,EAAKR,GACVJ,UAAWY,EAAKR,KAAOpB,EAAa,sBAAwB,gBAE5D,yBAAKgB,UAAU,sBACX,yBAAKA,UAAU,4BACX,2BAAOa,QAAQ,GAAGb,UAAU,uBAA5B,eACA,2BACIc,KAAK,OACLd,UAAWe,IAAW,CAClB,uBAAuB,EACvB,eAAgBlC,EAAWyB,OAAOX,MAClC,aAAcd,EAAWyB,OAAOT,YAEpCL,KAAK,SACLF,MAAOT,EAAWyB,OAAOhB,MACzB0B,SAAU,SAAC3B,GAAD,OAvDT,SAACA,GAC9B,IAAMG,EAAOH,EAAME,OAAOC,KAEtByB,EADU5B,EAAME,OAAOD,MACJI,QAAQ,MAAO,IACtCuB,EAA4B,KAAfA,EAAoBA,EAAWC,MAAM,WAAWC,KAAK,KAAO,GACzErC,EAAc,2BACPD,GADM,kBAERW,EAFQ,YAAC,eAGHX,EAAWW,IAHT,IAILF,MAAO2B,EACPtB,MAA6B,KAAtBsB,EAAWrB,OAClBC,UAAkC,MAAtBoB,EAAWrB,YA4CkBwB,CAAyB/B,IAC9CgC,UAAU,QAGlB,yBAAKrB,UAAU,4BACX,2BAAOa,QAAQ,GAAGb,UAAU,uBAA5B,sBACA,yBAAKA,UAAU,iCACX,2BACIc,KAAK,OACLd,UAAWe,IAAW,CAClB,uBAAuB,EACvB,eAAgBlC,EAAW2B,MAAMb,MACjC,aAAcd,EAAW2B,MAAMX,YAEnCL,KAAK,QACLF,MAAOT,EAAW2B,MAAMlB,MACxB0B,SAAU,SAAC3B,GAAD,OAAWD,EAAcC,IACnCgC,UAAU,MAEd,mCACA,2BACIP,KAAK,OACLd,UAAWe,IAAW,CAClB,uBAAuB,EACvB,eAAgBlC,EAAW4B,KAAKd,MAChC,aAAcd,EAAW4B,KAAKZ,YAElCL,KAAK,OACLF,MAAOT,EAAW4B,KAAKnB,MACvB0B,SAAU,SAAC3B,GAAD,OAAWD,EAAcC,IACnCgC,UAAU,QAItB,yBAAKrB,UAAU,4BACX,2BAAOa,QAAQ,GAAGb,UAAU,uBAA5B,qBACA,2BACIc,KAAK,OACLd,UAAWe,IAAW,CAClB,uBAAuB,EACvB,eAAgBlC,EAAWW,KAAKG,MAChC,aAAcd,EAAWW,KAAKK,YAElCL,KAAK,OACLF,MAAOT,EAAWW,KAAKF,MACvB0B,SAAU,SAAC3B,GAAD,OAAWD,EAAcC,QAK/C,yBAAKW,UAAU,uBACX,yBAAKA,UAAU,4BACX,2BAAOa,QAAQ,GAAGb,UAAU,uBAA5B,WACA,yBAAKA,UAAU,0BACX,2BACIc,KAAK,OACLd,UAAWe,IAAW,CAClB,uBAAuB,EACvB,eAAgBlC,EAAW6B,IAAIf,MAC/B,aAAcd,EAAW6B,IAAIb,YAEjCL,KAAK,MACLF,MAAOT,EAAW6B,IAAIpB,MACtB0B,SAAU,SAAC3B,GAAD,OAAWD,EAAcC,IACnCgC,UAAU,MAEd,0BACIrB,UAAU,6BACVsB,YAAaxB,EACbyB,aAAcxB,GAHlB,KAOA,qCAAKC,UAAU,WAAf,YAAoCd,EAAgB,iBAAkB,WAClE,yBAAKc,UAAU,kBACX,wXACA,yBAAKwB,IAAKC,IAAQC,IAAI,oBC1InDC,G,MAhED,SAAC,GAAmC,IAAjC9C,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAAoB,EACPC,oBAAS,GADF,mBACtC6C,EADsC,KACzBC,EADyB,KAEvCC,EAAYC,mBACZC,EAAWD,mBAwBjB,OACI,yBAAK/B,UAAWe,IAAW,CACvB,mBAAmB,EACnB,aAAclC,EAAW8B,QAAQd,aAEjC,2BACIO,GAAG,QACHU,KAAK,WACLH,QAAS9B,EAAW8B,QAAQrB,MAC5B0B,SArBiB,WACzBlC,EAAc,2BACPD,GADM,IAET8B,QAAQ,2BACD9B,EAAW8B,SADX,IAEHrB,OAAQT,EAAW8B,QAAQrB,MAC3BK,OAAQd,EAAW8B,QAAQhB,MAC3BE,UAAWhB,EAAW8B,QAAQhB,cAelC,yBAAKK,UAAU,eACX,2BAAOa,QAAQ,QAAQb,UAAU,qBAAjC,gBAGA,0BACIA,UAAU,mBACVK,QAtCS,WACrBwB,GAAe,KAmCP,wBAMA,yBACI7B,UAAW4B,EAAa,2BAA6B,oBACrDK,IAAKH,EACLzB,QAzCU,SAAChB,GACpBA,EAAME,SAAWuC,EAAUI,SAAW7C,EAAME,SAAWyC,EAASE,SAC/DL,GAAe,KAyCP,yBAAK7B,UAAU,gBACX,oDACA,kQACA,kQACA,0BAAMiC,IAAKD,EAAUhC,UAAU,oBAA/B,cCnDTmC,G,MANG,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAChB,OACI,4BAAQ/B,QAAS+B,EAAUpC,UAAU,cAArC,2BC8GOqC,MAjHf,WAEE,IAAMC,EACG,CACL,CAAElC,GAAI,EAAGZ,KAAM,eACf,CAAEY,GAAI,EAAGZ,KAAM,aACf,CAAEY,GAAI,EAAGZ,KAAM,WAJb8C,EAMQ,CACVhC,OAAQ,CAAChB,MAAO,GAAIK,OAAO,EAAOE,WAAW,EAAOU,UAAW,oKAC/DC,MAAO,CAAClB,MAAO,GAAIK,OAAO,EAAOE,WAAW,EAAOU,UAAW,sKAC9DE,KAAM,CAACnB,MAAO,GAAIK,OAAO,EAAOE,WAAW,EAAOU,UAAW,sKAC7Df,KAAM,CAACF,MAAO,GAAIK,OAAO,EAAOE,WAAW,EAAOU,UAAW,wKAC7DG,IAAK,CAACpB,MAAO,GAAIK,OAAO,EAAOE,WAAW,EAAOU,UAAW,gKAC5DI,QAAS,CAACrB,OAAO,EAAOK,OAAO,EAAOE,WAAW,EAAOU,UAAW,8FAZjE+B,GAcW,EAdXA,GAeS,EAjBF,EAoBGvD,mBAASuD,GAAlB1D,EApBM,sBAqBuBG,mBAASuD,GArBhC,mBAqBNzD,EArBM,KAqBMC,EArBN,OAsB6BC,mBAASuD,GAtBtC,mBAsBNC,EAtBM,KAsBSC,EAtBT,OAuByBzD,mBAASuD,GAvBlC,mBAuBNG,EAvBM,KAuBOC,EAvBP,OAwBuB3D,mBAAS,IAxBhC,mBAwBN4D,EAxBM,KAwBMC,EAxBN,KA0BPC,EAAa,GACbC,EAAY,GA6BlB,OADAC,QAAQC,IAAInE,EAAWyB,QAErB,yBAAKN,UAAU,OACb,wBAAIA,UAAU,cAAd,YAEA,yBAAKA,UAAU,aACb,wBAAIA,UAAU,mBAAd,YACA,yBAAKA,UAAU,cACb,yBAAKA,UAAU,oBACb,uBAAGiD,KAAK,IAAR,mCACA,0CAEF,yBAAKjD,UAAU,oBACb,uBAAGiD,KAAK,IAAR,6CACA,4CAKN,yBAAKjD,UAAU,aACb,wBAAIA,UAAU,mBAAd,mBACA,yBAAKA,UAAU,cACb,yBAAKA,UAAU,oBACb,uCACA,4CAKN,yBAAKA,UAAU,aACb,wBAAIA,UAAU,mBAAd,kBACA,kBAAC,EAAD,CACEpB,MAAOA,EACPC,WAAYA,EACZC,cAAeA,KAGnB,kBAAC,EAAD,CACED,WAAYA,EACZC,cAAeA,IAEjB,kBAAC,EAAD,CAAWsD,SApEE,WACfc,OAAOC,OAAOtE,GAAYoB,KAAI,SAAAmD,GACzBA,EAAKzD,OACNkD,EAAWQ,KAAKD,GAChBA,EAAKvD,WAAY,EACdgD,EAAWjD,SAAWsD,OAAOC,OAAOtE,GAAYe,SACjD4C,GAAiB,GACjBE,GAAe,GACfY,YAAW,WACTd,GAAiB,KAChB,QAGLM,EAAUO,KAAKD,EAAK7C,WACpB6C,EAAKvD,WAAY,EACjB6C,GAAe,GACfF,GAAiB,GACjBc,YAAW,WACTZ,GAAe,KACd,SAGPE,EAAc,GAAD,OACNE,OA+CJP,GAAiB,0BAAMvC,UAAU,yBAAhB,YACjByC,GACC,yBAAKzC,UAAU,uBACb,uCACA,4BACG2C,EAAW1C,KAAI,SAACsD,EAAKC,GAAN,OACd,wBAAIrD,IAAKqD,GAAQD,U,MCnG/BE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.930c6b34.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CVV.0fcb68ef.png\";","import React, { useState } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport './styles.scss'\r\nimport imgCVV from './../../assets/images/CVV.png'\r\n\r\nconst Payment = ({cards, cardsValue, setCardsValue }) => {\r\n\r\n    const [activeCard, setActiveCard] = useState(1)\r\n    const [toolTipActive, setToolTipActive] = useState(false)\r\n\r\n    const onClickLinkActive = (id) => {\r\n        setActiveCard(id)\r\n        setCardsValue({\r\n            number: {value: '', valid: false, textError: 'number uncorrect'},\r\n            month: {value: '', valid: false, textError: 'month uncorrect'},\r\n            year: {value: '', valid: false, textError: 'year uncorrect'},\r\n            name: {value: '', valid: false, textError: 'name uncorrect'},\r\n            cvv: {value: '', valid: false, textError: 'cvv uncorrect'},\r\n            checked: {value: false, valid: false, textError: 'Вы не приняли Terms and conditions'},\r\n        })\r\n    }\r\n\r\n    const onChangeValue = (event) => {\r\n        const value = event.target.value\r\n        const name = event.target.name\r\n        setCardsValue(() => validateValues(value, name))\r\n    }\r\n\r\n    const validateValues = (value, name) => {\r\n        switch(name) {\r\n            case 'month':\r\n                return {\r\n                    ...cardsValue,\r\n                    [name]: {\r\n                        ...cardsValue[name],\r\n                        value: value.replace(/[^\\d]/g,''),\r\n                        valid: value.length === 2,\r\n                        showError: !value.length === 2,\r\n                    }\r\n                }\r\n            case 'year':\r\n                return {\r\n                    ...cardsValue,\r\n                    [name]: {\r\n                        ...cardsValue[name],\r\n                        value: value.replace(/[^\\d]/g,''),\r\n                        valid: value.length === 2,\r\n                        showError: !value.length === 2,\r\n                    }\r\n                }\r\n            case 'name':\r\n                return {\r\n                    ...cardsValue,\r\n                    [name]: {\r\n                        ...cardsValue[name],\r\n                        value: value.replace(/[^a-z\\s]/gi, ''),\r\n                        valid: value.length > 3 && value.length <= 40,\r\n                        showError: !value.length > 3 && !value.length <= 40,\r\n                    }\r\n                }\r\n            case 'cvv':\r\n                return {\r\n                    ...cardsValue,\r\n                    [name]: {\r\n                        ...cardsValue[name],\r\n                        value: value.replace(/[^\\d]/g,''),\r\n                        valid: value.length === 3,\r\n                        showError: !value.length === 3,\r\n                    }\r\n                }\r\n            default: \r\n                return cardsValue\r\n        }\r\n    }\r\n    \r\n    const validateCardNumbersValue = (event) => {\r\n        const name = event.target.name\r\n        const value = event.target.value\r\n        let cardNumber = value.replace(/\\D/g, '')\r\n        cardNumber = cardNumber !== '' ? cardNumber.match(/.{1,4}/g).join(' ') : ''\r\n        setCardsValue({\r\n            ...cardsValue,\r\n            [name] : {\r\n                ...cardsValue[name],\r\n                value: cardNumber,\r\n                valid: cardNumber.length === 19, \r\n                showError: !cardNumber.length === 19,\r\n            },\r\n        })\r\n    }\r\n    \r\n    const openToolTip = () => {\r\n        setToolTipActive(true)\r\n    }\r\n    const closeToolTip = () => {\r\n        setToolTipActive(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"payment\">\r\n            <div className=\"payment__nav\">\r\n                {cards.map(link => (\r\n                    <span\r\n                        key={link.id}\r\n                        onClick={() => onClickLinkActive(link.id)}\r\n                        className={activeCard === link.id ? 'payment__nav-link active' : 'payment__nav-link'}\r\n                    >\r\n                        {link.name}\r\n                    </span>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"payment-card_wrap\">\r\n                {cards.map(card => (\r\n                    <div\r\n                        key={card.id}\r\n                        className={card.id === activeCard ? 'payment-card active' : 'payment-card'}\r\n                    >\r\n                        <div className=\"payment-card__left\">\r\n                            <div className=\"payment-card__input_wrap\">\r\n                                <label htmlFor=\"\" className=\"payment-card__label\">Card number</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className={classNames({\r\n                                        'payment-card__input': true,\r\n                                        'focus-error': !cardsValue.number.valid,\r\n                                        'show-error': cardsValue.number.showError,\r\n                                    })}\r\n                                    name=\"number\"\r\n                                    value={cardsValue.number.value}\r\n                                    onChange={(event) => validateCardNumbersValue(event)}\r\n                                    maxLength=\"19\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"payment-card__input_wrap\">\r\n                                <label htmlFor=\"\" className=\"payment-card__label\">Valid thru (mm/yy)</label>\r\n                                <div className=\"payment-card__input-date_wrap\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classNames({\r\n                                            'payment-card__input': true,\r\n                                            'focus-error': !cardsValue.month.valid,\r\n                                            'show-error': cardsValue.month.showError,\r\n                                        })}\r\n                                        name=\"month\" \r\n                                        value={cardsValue.month.value}   \r\n                                        onChange={(event) => onChangeValue(event)} \r\n                                        maxLength=\"2\"\r\n                                    />\r\n                                    <span>/</span>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classNames({\r\n                                            'payment-card__input': true,\r\n                                            'focus-error': !cardsValue.year.valid,\r\n                                            'show-error': cardsValue.year.showError,\r\n                                        })}\r\n                                        name=\"year\" \r\n                                        value={cardsValue.year.value}   \r\n                                        onChange={(event) => onChangeValue(event)} \r\n                                        maxLength=\"2\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"payment-card__input_wrap\"> \r\n                                <label htmlFor=\"\" className=\"payment-card__label\">Cardholder's name</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className={classNames({\r\n                                        'payment-card__input': true,\r\n                                        'focus-error': !cardsValue.name.valid,\r\n                                        'show-error': cardsValue.name.showError,\r\n                                    })}\r\n                                    name=\"name\"\r\n                                    value={cardsValue.name.value}   \r\n                                    onChange={(event) => onChangeValue(event)} \r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"payment-card__right\">\r\n                            <div className=\"payment-card__input_wrap\">\r\n                                <label htmlFor=\"\" className=\"payment-card__label\">CVV/CVC</label>\r\n                                <div className=\"payment-card__cvv-wrap\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classNames({\r\n                                            'payment-card__input': true,\r\n                                            'focus-error': !cardsValue.cvv.valid,\r\n                                            'show-error': cardsValue.cvv.showError,\r\n                                        })}\r\n                                        name=\"cvv\"\r\n                                        value={cardsValue.cvv.value}   \r\n                                        onChange={(event) => onChangeValue(event)} \r\n                                        maxLength=\"3\"\r\n                                    />\r\n                                    <span \r\n                                        className=\"payment-card__cvv-question\"\r\n                                        onMouseOver={openToolTip}\r\n                                        onMouseLeave={closeToolTip}\r\n                                    >\r\n                                        ?\r\n                                    </span>\r\n                                    <div className=\"tooltip\" className={toolTipActive ? 'tooltip active': 'tooltip'}>\r\n                                        <div className=\"tooltip__inner\">\r\n                                            <p>CVV-код находится на тыльной стороне карты и включает в себя три цифры</p>\r\n                                            <img src={imgCVV} alt=\"cvv\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","import React, { useState, useRef } from 'react'\r\nimport classNames from 'classnames'\r\nimport './styles.scss'\r\n\r\n\r\nconst Terms = ({ cardsValue, setCardsValue }) => {\r\n    const [activePopup, setActivePopup] = useState(false)\r\n    const popupWrap = useRef()\r\n    const popupBtn = useRef()\r\n\r\n    const onClickOpenPopup = () => {\r\n        setActivePopup(true)\r\n    }\r\n\r\n    const onClickClosePopup = (event) => {\r\n        if(event.target === popupWrap.current || event.target === popupBtn.current) {\r\n            setActivePopup(false)\r\n        }\r\n    }\r\n\r\n    const onChangeTermsChecked = () => {\r\n        setCardsValue({\r\n            ...cardsValue,\r\n            checked: {\r\n                ...cardsValue.checked,\r\n                value: !cardsValue.checked.value,\r\n                valid: !cardsValue.checked.valid,\r\n                showError: cardsValue.checked.valid\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classNames({\r\n            'app__item terms': true,\r\n            'show-error': cardsValue.checked.showError,\r\n        })}>\r\n            <input\r\n                id=\"terms\"\r\n                type=\"checkbox\"\r\n                checked={cardsValue.checked.value}\r\n                onChange={onChangeTermsChecked} />\r\n            <div className=\"terms__text\">\r\n                <label htmlFor=\"terms\" className=\"terms__text-label\">\r\n                    I accept the\r\n                </label>\r\n                <span\r\n                    className=\"terms__text-link\"\r\n                    onClick={onClickOpenPopup}\r\n                >\r\n                    Terms and Conditions\r\n                </span>\r\n                <div \r\n                    className={activePopup? 'terms__popup_wrap active' : 'terms__popup_wrap'} \r\n                    ref={popupWrap}\r\n                    onClick={onClickClosePopup}\r\n                >\r\n                    <div className=\"terms__popup\">\r\n                        <h6>Terms and Conditions</h6>\r\n                        <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Ea quis dolore eos ipsa architecto porro necessitatibus non, minima laboriosam esse distinctio earum ducimus repudiandae dolorem perferendis? Nemo, voluptatum et! Natus?</p>\r\n                        <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Ea quis dolore eos ipsa architecto porro necessitatibus non, minima laboriosam esse distinctio earum ducimus repudiandae dolorem perferendis? Nemo, voluptatum et! Natus?</p>\r\n                        <span ref={popupBtn} className=\"terms__popup-btn\">&times;</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Terms\r\n","import React from 'react'\r\nimport './styles.scss'\r\n\r\n\r\nconst SubmitBtn = ({onSubmit}) => {\r\n    return (\r\n        <button onClick={onSubmit} className=\"submit-btn\">Place order ($624.99)</button>\r\n    )\r\n}\r\n\r\nexport default SubmitBtn\r\n","import React, {useState, useEffect} from 'react';\nimport { Payment, Terms, SubmitBtn } from './components'\n\nfunction App() {\n\n  const initialState = {\n    cards: [\n      { id: 1, name: 'Credit card' },\n      { id: 2, name: 'Gift card' },\n      { id: 3, name: 'PayPal' },\n    ],\n    cardsValue: {\n      number: {value: '', valid: false, showError: false, textError: 'Некорректно заполнено поле \"Card number\"'},\n      month: {value: '', valid: false, showError: false, textError: 'Некорректно заполнено поле \"Valid thru mm\"'},\n      year: {value: '', valid: false, showError: false, textError: 'Некорректно заполнено поле \"Valid thru yy\"'},\n      name: {value: '', valid: false, showError: false, textError: 'Некорректно заполнено поле \"Cardholder name\"'},\n      cvv: {value: '', valid: false, showError: false, textError: 'Некорректно заполнено поле \"CVV/CVC\"'},\n      checked: {value: false, valid: false, showError: false, textError: 'Вы не приняли Terms and conditions'}\n    },\n    successSubmit: false,\n    errorSubmit: false,\n  }\n\n  const [cards] = useState(initialState.cards)\n  const [cardsValue, setCardsValue] = useState(initialState.cardsValue)\n  const [successSubmit, setSuccessSubmit] = useState(initialState.successSubmit)\n  const [errorSubmit, setErrorSubmit] = useState(initialState.errorSubmit)\n  const [errorsList, setErrorsList] = useState([])\n\n  const successArr = []\n  const errorsArr = []\n  const onSubmit = () => {\n    Object.values(cardsValue).map(item => {\n      if(item.valid) {\n        successArr.push(item)\n        item.showError = false\n        if(successArr.length === Object.values(cardsValue).length) {\n          setSuccessSubmit(true)\n          setErrorSubmit(false)\n          setTimeout(() => {\n            setSuccessSubmit(false)\n          }, 2000)\n        }\n      } else {\n        errorsArr.push(item.textError)\n        item.showError = true\n        setErrorSubmit(true)\n        setSuccessSubmit(false)\n        setTimeout(() => {\n          setErrorSubmit(false)\n        }, 5000)\n      }\n    })\n    setErrorsList([\n        ...errorsArr\n    ])\n  }\n\n  console.log(cardsValue.number)\n  return (\n    <div className=\"app\">\n      <h1 className=\"app__title\">Checkout</h1>\n\n      <div className=\"app__item\">\n        <h2 className=\"app__item-title\">Products</h2>\n        <div className=\"inner-list\">\n          <div className=\"inner-list__item\">\n            <a href=\"\">Apple MacBook Pro 16\" 8 Core i9</a>\n            <span>$499.00</span>\n          </div>\n          <div className=\"inner-list__item\">\n            <a href=\"\">Apple iPhone 11 Pro Max, 256 ГБ</a>\n            <span>$130.00</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"app__item\">\n        <h2 className=\"app__item-title\">Shipping method</h2>\n        <div className=\"inner-list\">\n          <div className=\"inner-list__item\">\n            <span>FedEx</span>\n            <span>$130.00</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"app__item\">\n        <h2 className=\"app__item-title\">Payment method</h2>\n        <Payment \n          cards={cards} \n          cardsValue={cardsValue} \n          setCardsValue={setCardsValue}/>\n      </div>\n\n      <Terms \n        cardsValue={cardsValue}\n        setCardsValue={setCardsValue}/>\n\n      <SubmitBtn onSubmit={onSubmit}/>\n\n      {successSubmit && <span className=\"submit-status success\">Success!</span>}\n      {errorSubmit && \n        <div className=\"submit-status error\">\n          <span>Error</span>\n          <ul>\n            {errorsList.map((err, index) => (\n              <li key={index}>{err}</li>\n            ))}\n          </ul>\n        </div>}\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}